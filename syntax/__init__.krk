from bim import SyntaxState, bindHighlighter as bind

class Highlighter(SyntaxState):

    comment_buzzwords = {
        'TODO': SyntaxState.FLAG_NOTICE,
        'XXX':  SyntaxState.FLAG_NOTICE,
        'FIXME': SyntaxState.FLAG_ERROR,
    }

    def commentBuzzwords():
        for k,v in self.comment_buzzwords.items():
            if self.matchAndPaint(k,v,self.cKeywordQualifier): return 1
        return 0

    def paintComment():
        while self[0]:
            if self.commentBuzzwords():
                continue
            self.paint(1, self.FLAG_COMMENT)
        return None

    def matchPrefix(prefix):
        let i = 0
        while True:
            if i == len(prefix): return True
            if prefix[i] != self[i]: return False
            if not self[i]: return False
            i++

    def paintSingleString():
        self.paint(1, self.FLAG_STRING)
        while self[0]:
            if self[0] == '\\' and self[1] == "'":
                self.paint(2, self.FLAG_ESCAPE)
            else if self[0] == "'":
                self.paint(1, self.FLAG_STRING)
                return
            else if self[0] == '\\':
                self.paint(2, self.FLAG_ESCAPE)
            else:
                self.paint(1, self.FLAG_STRING)

    def paintSimpleString():
        self.paint(1, self.FLAG_STRING)
        while self[0]:
            if self[0] == '\\' and self[1] == '"':
                self.paint(2, self.FLAG_ESCAPE)
            else if self[0] == '"':
                self.paint(1, self.FLAG_STRING)
                return
            else if self[0] == '\\':
                self.paint(2, self.FLAG_ESCAPE)
            else:
                self.paint(1, self.FLAG_STRING)

